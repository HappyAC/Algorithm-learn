#include<iostream>
#include<algorithm>
#include<vector>
#include<cmath>
#include<iomanip>
using namespace std;
const int Max=105;
int father[Max];

struct road
{
    int u,v;
	double w;
};

struct land
{
	double x,y;
};

bool cmp(const road &a,const road &b)
{
    return a.w<b.w;
}

int find(int x)
{
    return father[x]==x ? x :father[x]=find(father[x]);
}

int main()
{
    int T;
	cin>>T;
    while(T--)
    {
		int n,m,i,j;
		cin>>n;
		land b[101];
		for(i=1;i<=n;i++) cin>>b[i].x>>b[i].y;
        double ans=0;
        vector<road> a;
		m=n*(n-1)/2;
        for(i=1;i<=n;i++)
            father[i]=i;
        for(i=1;i<=n-1;i++)
        {
			for(j=i+1;j<=n;j++)
			{
				road p;
				p.u=i;
				p.v=j;
				p.w=sqrt((b[i].x-b[j].x)*(b[i].x-b[j].x)+(b[i].y-b[j].y)*(b[i].y-b[j].y));
				a.push_back(p);
			}
        }
//		vector<road>::iterator vec; 
        sort(a.begin(),a.end(),cmp);
        for(i=0;i<m;i++)
        {
            int e=i;
            int x=find(a[e].u);
            int y=find(a[e].v);
			if(a[i].w<10 || a[i].w>1000) continue;
            if(x!=y) 
            {
                ans+=a[e].w;
                father[y]=x;
            }
        }
		int sum=0;
		for(i=1;i<=n;i++) if(i==father[i]) sum++;
		if(sum>1) cout<<"oh!"<<endl;
		else
			cout<<fixed<<setprecision(1)<<ans*100<<endl;
    } 
    return 0;
}