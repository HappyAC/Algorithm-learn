__int64 Extended_Euclid (__int64 a,__int64 b,__int64 &x,__int64 &y)
{//扩展欧几里得算法,求ax+by=gcd(a,b)的一组解(x,y),d=gcd(a,b)
    __int64 d;
    if (b==0)
    {
        x=1;y=0;
        return a;
    }
    d=Extended_Euclid(b,a%b,y,x);
    y-=a/b*x;
    return d;
}

__int64 Chinese_Remainder (__int64 w[],__int64 Md[],int len)
{//中国剩余定理不互质
    bool flag=false;
    __int64 n1=Md[0], b1=w[0],x,y;
    for (int i=1;i<len;i++)
    {
        __int64 n2=Md[i], b2=w[i];
        __int64 bb=b2-b1;
        __int64 d=Extended_Euclid (n1,n2,x,y);
        if (bb % d)        //模线性解k1时发现无解
        {
            flag = true;
            break;
        }
        __int64 k = bb/d*x;  //相当于求上面所说的k1【模线性方程】
        __int64 t = n2/d;
        if (t < 0) t = -t;
        k = (k % t + t) % t;    //相当于求上面的K`
        b1 = b1 + n1*k;
        n1 = n1 / d * n2;
    }
    if (flag) return -1;  //无解
    return b1;
}