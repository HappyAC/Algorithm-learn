 #include<iostream>
#include<string>
using namespace std;
int n,m;
int p[25][25];
bool visit[20][25][25];
bool success;

void DFS(int from,int to,int cnt,int t)
{
	if(success==true) return;
	if(cnt==t+1)
	{
		if(from==to) success=true;
		return;
	}
	for(int i=0;i<n;i++)
	{
		if(visit[cnt][from][to]==true) continue;
		if(p[from][i]==1) 
		{
			visit[cnt][from][to]=true;
			DFS(i,to,cnt+1,t);
			visit[cnt][from][to]=false;
		}
	}
}

void run()
{	
	fill(&p[0][0],&p[n][n]+1,0);
	int i,j;
	for(i=0;i<m;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		p[a][b]=1;
	}
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int from,to,k;
		scanf("%d%d%d",&from,&to,&k);
		success=false;
		DFS(from,to,0,k);
	}
}

int main()
{
	while(scanf("%d%d",&m,&n)!=EOF)
	{
		if(n==0 && m==0) break;
		run();
	}
	return 0;
}