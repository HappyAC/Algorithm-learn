#include <iostream>
#include <cstdlib>
#include <string>
using namespace std;

struct trieNode
{
    trieNode *next[26];
	int data;
    trieNode()
    {
		data=0;
        for(int i = 0; i < 26; i++)
        {
            next[i] = NULL;
        }
    }
};
trieNode *Root;
void insertString(string str)
{
    trieNode *pt = Root;
    for (int i = 0; i < str.length(); i ++)
    {
        if (pt->next[str[i] - 'a'] == NULL)
        {
            pt->next[str[i] - 'a'] = new trieNode();
        }
        pt = pt->next[str[i] - 'a'];
    }
	pt->data=1;
}
void deleteTree(trieNode *root)
{
    for (int i = 0; i < 26; i ++) {
        if (root->next[i] != NULL) {
            deleteTree(root->next[i]);
        }
    }
    free(root);
}
int search(string str)
{
    trieNode *pt = Root;
    int i = 0;
    for (i = 0; i < str.length(); i ++)
    {
        if (pt->next[str[i] - 'a'] != NULL)
        {
            pt = pt->next[str[i] - 'a'];
        }
        else
        {
            break;
        }
    }
    if (i < str.length() || pt->data!=1) {
        return 0;
	}
    return 1;
}  

char str[50005][100];

int main()
{
    Root = new trieNode();
    string s;
 	int cnt=0;
    while(scanf("%s",str[cnt])!=EOF)
    {
        s=str[cnt];
        insertString(s);
		cnt++;
    }
	for(int x=0;x<cnt;x++)
    {
		s=str[x];
		string s1="";
		for(int i=0;i<s.size();i++)
		{
			s1=s1+s[i];
			if(search(s1)==1)
			{
				string s2="";
				for(int j=i+1;j<s.size();j++) s2+=s[j];
				if(search(s2)==1)
				{
					cout<<s<<endl;
					break;
				}
			}
		}
    }
//    deleteTree(Root);
    return 0;
}